{% set version = '0.9.0' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-clarabel
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/clarabel_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/clarabel/clarabel_{{ version }}.tar.gz
  sha256: 50963022f8e5dc9d956193acf7b87194548dc4b3555bd844aa1f9f4d34f2c6bc

build:
  merge_build_host: True  # [win]
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
  host:
    - r-base
  run:
    - r-base
    - {{ native }}gcc-libs         # [win]

test:
  commands:
    - $R -e "library('clarabel')"           # [not win]
    - "\"%R%\" -e \"library('clarabel')\""  # [win]

about:
  home: https://oxfordcontrol.github.io/clarabel-r/
  license: Apache-2.0
  summary: A versatile interior point solver that solves linear programs (LPs), quadratic programs
    (QPs), second-order cone programs (SOCPs), semidefinite programs (SDPs), and problems
    with exponential and power cone constraints (<https://clarabel.org/stable/>). For
    quadratic objectives, unlike interior point solvers based on the standard homogeneous
    self-dual embedding (HSDE) model, 'Clarabel' handles quadratic objective without
    requiring any epigraphical reformulation of its objective function. It can therefore
    be significantly faster than other HSDE-based solvers for problems with quadratic
    objective functions. Infeasible problems are detected using using a homogeneous
    embedding technique.
  license_family: APACHE
  license_file:
    - LICENSE-2.0.txt

extra:
  recipe-maintainers:
    - conda-forge/r
